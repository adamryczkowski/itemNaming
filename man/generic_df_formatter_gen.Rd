% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/itemNaming.R
\name{generic_df_formatter_gen}
\alias{generic_df_formatter_gen}
\title{Generic formatting function. It is the most generic call of the library itemNaming.}
\usage{
generic_df_formatter_gen(item_numeral = English_numeral$new(singular =
  "item", plural = "items", number_format_fn = format_integer,
  flag_skip_one = FALSE), all_except_infix_fn = all_except_infix_fn_en,
  threshold_for_inversion = 0.8, included_column_name = "__included",
  item_ellipsis_fn = item_ellipsis_fn_en, max_explicit_items_count = 7,
  number_of_elements_around_ellipsis = c(3, 2), txt_separator = ", ",
  txt_separator_last = "ਊnd ", txt_attribute_separator = ", ",
  txt_attribute_separator_last = "ਊnd ",
  txt_attribute_prefix = " (", txt_attribute_suffix = ")",
  txt_attribute_bare_quote = "`", txt_attribute_label_quote = "",
  txt_attribute_infix = ": ")
}
\arguments{
\item{item_numeral}{Object that knows how to write in a natural language a numeral with a noun. By default it uses an English numeral with the noun "item" (that is capable of creating strings "1 item" or "15 items")}

\item{all_except_infix_fn}{Function that can create a description of complementary notation in a natural language. The arguments are described later. Default function writes in English text "all items except for", using the \code{item_numeral} for the word "items".}

\item{threshold_for_inversion}{Number between 0 and 1 that describes the threshold of percentage of selected items to trigger a complementary notation.}

\item{included_column_name}{Name of the column that contains filtered cases to display. Essential to make the complementary notation possible. Defaults to \code{"__included"}.}

\item{item_ellipsis_fn}{Function that can create an ellipsis notation in the middle of a long list. Defaults to a function that displays text ", 13 items more, " (assuming the item_numeral is for the noun "item").}

\item{max_explicit_items_count}{Maximal number of items to be ever displayed in comma separated list. Ellipsis notation will be used, if number of items exceed this value.}

\item{number_of_elements_around_ellipsis}{Number of elements around the actual ellipsis, when the ellipsis is used. Must be a two element integer vector. Defaults to \code{c(3,2)} to produce text like "item1, item2, item3, 5 items more, item9 and item10"}

\item{txt_separator}{String that separates list elements for all but last item. Defaults to ", ".}

\item{txt_attribute_separator}{Simmilar to \code{txt_separator}, but for the attributes of a single item (if there are any). Defaults to ", ".}

\item{txt_attribute_separator_last}{Simmilar to \code{txt_separator_last}, but for the attributes of a single item (if there are any). Defaults to "\\uA0and ".}

\item{txt_attribute_prefix}{String that gets pasted at the beginning of the attribute list. Defaults to "\\ua0(".}

\item{txt_attribute_suffix}{String that gets pasted at the beginning of the attribute list. Defaults to ")".}

\item{txt_attribute_bare_quote}{If the attribute name is available only in its internal name (its label is not specified), this string will get pasted before and after. Defaults to markdown code "`". This may be extended in future to allow formatting in different markup languages, which don't use symmetric quotes, like LaTeX (\code{"\\verbatim\{"} and \\code{"\}"}).}

\item{txt_attribute_label_quote}{The same as \code{txt_attribute_bare_quote} but for labelled attributes. Defaults to empty string.}

\item{txt_attribute_infix}{The string that will be inserted between the attribute name and its value. Defaults to ":\\uA0".}

\item{txt_spearator_last}{String that separates two last list elements. Defaults to "\\uA0and ". \\uA0 is a unicode for non-breakable space.}
}
\value{
A closure that turns a data.frame into a formatted list (as string)
}
\description{
Generic formatting function. It is the most generic call of the library itemNaming.
}
